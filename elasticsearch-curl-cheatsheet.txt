To upload a log via logstash:
	cd C:/code/ELK/logstash/bin
	logstash -f C:\code\ELK\logstash\config\logstash.conf

To run any curl commands you must first:  
	cd C:/code/curl

To create a new index in your local elasticsearch session:
	curl -XPUT http://localhost:9200/[index-name-here]?pretty"

To upload a document using curl, first make sure it's a .json format, must be only one object then:
	curl -XPOST http://localhost:9200/[index-name-here]/_doc?pretty -H "Content-Type: application/json" -d @C:/path/to/file.json

To view the contents of the whole index: 
	curl -XGET "http://localhost:9200/[index-name-here]/_search?size=1000&pretty"
-
To view all of your indecies:
	curl -XGET http://localhost:9200/_cat/indices

You don't need to create a new index before uploading a document. It'll do it for you.
To upload multiple documents, format it like so in example file.json:

{"index": {"_index": "temp-index", "_id": "1"}}
{"log_entry": "2024-06-10T20:13:00.7932357Z ##[section]Starting: Job"}
{"index": {"_index": "temp-index", "_id": "2"}}
{"log_entry": "2024-06-10T20:13:01.0040784Z ##[section]Starting: Initialize job"}
{"index": {"_index": "temp-index", "_id": "3"}}

	Then call:
	curl -XPOST http://localhost:9200/[index-name-here]/_bulk?pretty --data-binary @C:/path/to/file.json -H "Content-Type: application/json"

To delete an index:
	curl -XDELETE http://localhost:9200/[index-name-here]?pretty

To search each document in an index, replace [field 1] and [field 2] (make sure to remove the brackets but keep all other formatting) and replace them with your search terms
	curl -XGET "http://localhost:9200/[index-name-here]/_search?pretty" -H "Content-Type: application/json" -d"{\"query\":{\"match\":{\"[field 1]\":\"[field 2]\"}}}"
	
	Example return:       
       {
        "_index" : "bulk-index",
        "_id" : "43",
        "_score" : 4.0176864,
        "_source" : {
          "log_entry" : "2024-06-10T20:13:04.1486660Z Finished checking job knob settings."
        }

To use curl to upload the log files:
	Download the log file from a completed build on Dev-ops
	Get the BIG log file that contains everything 
	Run through text-to-json conversion



